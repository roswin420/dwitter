//  library for writing and testing smart contracts
require("@nomicfoundation/hardhat-toolbox");

// dotenv Loads environment variables from .env file
require('dotenv').config({path:'./.env'});

//creating dummy accounts for signing
/*Asynchronous programming is a form of parallel programming that allows a unit of work to run 
separately from the primary application thread. 
An async function consists of two main keywords async and await. 
They keyword async is used to make a function asynchronous. 
The await keyword will ask the execution to wait until the defined task gets executed*/

task("accounts","Prints list of accounts",async(taskArgs,hre)=>{
  //return list of account addresses
  //if defaultNetwork=hardhat,then list of all accounts generated by hardhat returned else
  //if defaultNetwork=polygon,then accounts defined under polygon are returned
  const [signerAccounts]=await hre.ethers.getSigners(); 

  console.log("Account Address:",signerAccounts.address);//returns address of the account
})
// getting environment variables from .env.local file
const privateKey=process.env.NEXT_PUBLIC_PRIVATE_KEY // Private key of metamask acount
const RPC_URL=process.env.NEXT_PUBLIC_RPC_URL //Endpoint URL from Infura (polygon mumbai) helps connect dapps to blockchain

module.exports = {
  solidity: "0.8.9",
  defaultNetwork:"polygon",//defaultnet can be hardhat or polygon
  networks:{
    hardhat:{},
    polygon:{
      url:RPC_URL,
      accounts:[privateKey]
    }
  }
};

// goto https://mumbai.polygonscan.com/ and click "add Mumbai Network"
// run npx hardhat accounts and copy the Account Address
// goto https://faucet.polygon.technology/ paste the copied address & submit